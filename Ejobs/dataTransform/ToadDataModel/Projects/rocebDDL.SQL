/*
CREATED: 3/5/2015
MODIFIED: 4/3/2015
MODEL: ORACLE 12C
DATABASE: ORACLE 12C
*/




-- DROP TABLES SECTION ---------------------------------------------------

DROP TABLE T_STEGGEDADS
/
DROP TABLE T_USERS
/
DROP TABLE T_ERRORJOBAD
/
DROP TABLE T_SCRAPPEDADS
/
DROP TABLE T_JOBADLANGUAGE
/
DROP TABLE T_JOBADJOBTYPE
/
DROP TABLE T_JOBADCITY
/
DROP TABLE T_JOBADDRIVERLICENCE
/
DROP TABLE T_DRIVERLICENCE
/
DROP TABLE T_JOBADCAREERLEVEL
/
DROP TABLE T_CITY
/
DROP TABLE T_LANGUAGE
/
DROP TABLE T_CAREERLEVEL
/
DROP TABLE T_JOBTYPE
/
DROP TABLE T_JOBADINDUSTRY
/
DROP TABLE T_INDUSTRY
/
DROP TABLE T_ACTIVEJOBADSDEPARTMENTS
/
DROP TABLE T_DEPARTMENTS
/
DROP TABLE T_JOBAD
/
DROP TABLE T_COUNTY
/
DROP TABLE T_COUNTRY
/
DROP TABLE T_COMPANY
/

-- DROP SEQUENCES SECTION --------------------------------------------------- 

DROP SEQUENCE SQ_JOBADSCRAPE_ID
/

-- CREATE SEQUENCES SECTION -------------------------------------------------

CREATE SEQUENCE SQ_JOBADSCRAPE_ID
 INCREMENT BY 1
 START WITH 1
 NOMAXVALUE
 NOMINVALUE
 CACHE 20
/

-- CREATE TABLES SECTION -------------------------------------------------

-- TABLE T_COMPANY

CREATE TABLE T_COMPANY(
  COMPANYID INTEGER GENERATED ALWAYS AS IDENTITY(
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOMINVALUE
    CACHE 20) NOT NULL,
  COMPANYNAME VARCHAR2(150 ) NOT NULL,
  COMPANYDESCRIPTION CHAR(400 ),
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_COMPANY

ALTER TABLE T_COMPANY ADD CONSTRAINT PK_COMPANY PRIMARY KEY (COMPANYID,COUNTRYID)
/

-- TABLE T_COUNTRY

CREATE TABLE T_COUNTRY(
  COUNTRYID INTEGER NOT NULL,
  COUNTRYNAME VARCHAR2(50 ) NOT NULL,
  ISOCOUNTRYCODEA2 VARCHAR2(2 ),
  ISOCOUNTRYCODEA3 VARCHAR2(3 )
)
/

-- ADD KEYS FOR TABLE T_COUNTRY

ALTER TABLE T_COUNTRY ADD CONSTRAINT PK_COUNTRY PRIMARY KEY (COUNTRYID)
/

-- TABLE T_COUNTY

CREATE TABLE T_COUNTY(
  COUNTYID VARCHAR2(3 ) NOT NULL,
  COUNTYNAME VARCHAR2(30 ),
  COUNTRYID INTEGER NOT NULL,
  COUNTYCAPITAL VARCHAR2(25 )
)
/

-- ADD KEYS FOR TABLE T_COUNTY

ALTER TABLE T_COUNTY ADD CONSTRAINT PK_COUNTY PRIMARY KEY (COUNTYID,COUNTRYID)
/

-- TABLE T_JOBAD

CREATE TABLE T_JOBAD(
  JOBADID INTEGER NOT NULL,
  JOBPARSEID INTEGER,
  JOBADJSONHASH VARCHAR2(160 ),
  JOBTITLE VARCHAR2(450 ),
  JOBADSTARTDATE DATE,
  JOBADENDDATE DATE,
  JOBADPOSITIONSNR INTEGER,
  JOBADAPPLICANTSNR INTEGER,
  JOBADDESCRIPTION VARCHAR2(32767 ),
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBAD

ALTER TABLE T_JOBAD ADD CONSTRAINT PK_JOBAD PRIMARY KEY (JOBADID,COMPANYID,COUNTRYID)
/

-- TABLE T_DEPARTMENTS

CREATE TABLE T_DEPARTMENTS(
  DEPARTMENTID INTEGER NOT NULL,
  DEPARTMENTNAME VARCHAR2(40 ),
  DEPARTMENTNAMEALT VARCHAR2(40 )
)
/

-- ADD KEYS FOR TABLE T_DEPARTMENTS

ALTER TABLE T_DEPARTMENTS ADD CONSTRAINT PK_DEPARTMENTS PRIMARY KEY (DEPARTMENTID)
/

-- TABLE T_ACTIVEJOBADSDEPARTMENTS

CREATE TABLE T_ACTIVEJOBADSDEPARTMENTS(
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL,
  DEPARTMENTID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_ACTIVEJOBADSDEPARTMENTS

ALTER TABLE T_ACTIVEJOBADSDEPARTMENTS ADD CONSTRAINT FK_ACTIVEJOBADSDEPARTMENTS PRIMARY KEY (JOBADID,COMPANYID,COUNTRYID,DEPARTMENTID)
/

-- TABLE T_INDUSTRY

CREATE TABLE T_INDUSTRY(
  INDUSTRYID INTEGER NOT NULL,
  INDUSTRYNAME VARCHAR2(40 ),
  INDUSTRYNAMEALT VARCHAR2(40 )
)
/

-- ADD KEYS FOR TABLE T_INDUSTRY

ALTER TABLE T_INDUSTRY ADD CONSTRAINT PK_INDUSTRY PRIMARY KEY (INDUSTRYID)
/

-- TABLE T_JOBADINDUSTRY

CREATE TABLE T_JOBADINDUSTRY(
  INDUSTRYID INTEGER NOT NULL,
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADINDUSTRY

ALTER TABLE T_JOBADINDUSTRY ADD CONSTRAINT FK_JOBADINDUSTRY PRIMARY KEY (INDUSTRYID,JOBADID,COMPANYID,COUNTRYID)
/

-- TABLE T_JOBTYPE

CREATE TABLE T_JOBTYPE(
  JOBADTYPEID INTEGER NOT NULL,
  JOBADTYPENAME VARCHAR2(30 )
)
/

-- ADD KEYS FOR TABLE T_JOBTYPE

ALTER TABLE T_JOBTYPE ADD CONSTRAINT PK_JOBTYPE PRIMARY KEY (JOBADTYPEID)
/

-- TABLE T_CAREERLEVEL

CREATE TABLE T_CAREERLEVEL(
  CAREERLEVELID INTEGER NOT NULL,
  CAREERLEVELNAME VARCHAR2(30 ),
  CAREERLEVELNAMEALT VARCHAR2(30 )
)
/

-- ADD KEYS FOR TABLE T_CAREERLEVEL

ALTER TABLE T_CAREERLEVEL ADD CONSTRAINT PK_CARRERLEVEL PRIMARY KEY (CAREERLEVELID)
/

-- TABLE T_LANGUAGE

CREATE TABLE T_LANGUAGE(
  LANGUAGEID INTEGER NOT NULL,
  LANGUAGENAME VARCHAR2(30 ),
  LANGUAGENAMEALT VARCHAR2(30 )
)
/

-- ADD KEYS FOR TABLE T_LANGUAGE

ALTER TABLE T_LANGUAGE ADD CONSTRAINT PK_LANGUAGE PRIMARY KEY (LANGUAGEID)
/

-- TABLE T_CITY

CREATE TABLE T_CITY(
  CITYID INTEGER NOT NULL,
  CITYTYPE VARCHAR2(1 ),
  CITYNAME VARCHAR2(35 ),
  CITYNAMEALT VARCHAR2(30 ),
  PARENTCITYNAME VARCHAR2(35 ),
  COUNTYID VARCHAR2(3 ) NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_CITY

ALTER TABLE T_CITY ADD CONSTRAINT PK_CITY PRIMARY KEY (CITYID,COUNTYID,COUNTRYID)
/

-- TABLE T_JOBADCAREERLEVEL

CREATE TABLE T_JOBADCAREERLEVEL(
  CAREERLEVELID INTEGER NOT NULL,
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADCAREERLEVEL

ALTER TABLE T_JOBADCAREERLEVEL ADD CONSTRAINT FK_JOBADCAREERLEVEL PRIMARY KEY (CAREERLEVELID,JOBADID,COMPANYID,COUNTRYID)
/

-- TABLE T_DRIVERLICENCE

CREATE TABLE T_DRIVERLICENCE(
  DRIVERLICENCEID VARCHAR2(5 ) NOT NULL,
  DRIVERLICENCEDESCRIPTION VARCHAR2(350 ),
  DRIVERLICENCEDESCRIPTIONALT VARCHAR2(350 )
)
/

-- ADD KEYS FOR TABLE T_DRIVERLICENCE

ALTER TABLE T_DRIVERLICENCE ADD CONSTRAINT PK_DRIVERLICENCE PRIMARY KEY (DRIVERLICENCEID)
/

-- TABLE T_JOBADDRIVERLICENCE

CREATE TABLE T_JOBADDRIVERLICENCE(
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL,
  DRIVERLICENCEID VARCHAR2(5 ) NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADDRIVERLICENCE

ALTER TABLE T_JOBADDRIVERLICENCE ADD CONSTRAINT FK_JOBADDRIVERLICENCE PRIMARY KEY (JOBADID,COMPANYID,COUNTRYID,DRIVERLICENCEID)
/

-- TABLE T_JOBADCITY

CREATE TABLE T_JOBADCITY(
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL,
  CITYID INTEGER NOT NULL,
  COUNTYID VARCHAR2(3 ) NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADCITY

ALTER TABLE T_JOBADCITY ADD CONSTRAINT FK_JOBADCITY PRIMARY KEY (JOBADID,COMPANYID,COUNTRYID,CITYID,COUNTYID)
/

-- TABLE T_JOBADJOBTYPE

CREATE TABLE T_JOBADJOBTYPE(
  JOBADTYPEID INTEGER NOT NULL,
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADJOBTYPE

ALTER TABLE T_JOBADJOBTYPE ADD CONSTRAINT FK_JOBADJOBTYPE PRIMARY KEY (JOBADTYPEID,JOBADID,COMPANYID,COUNTRYID)
/

-- TABLE T_JOBADLANGUAGE

CREATE TABLE T_JOBADLANGUAGE(
  LANGUAGEID INTEGER NOT NULL,
  JOBADID INTEGER NOT NULL,
  COMPANYID INTEGER NOT NULL,
  COUNTRYID INTEGER NOT NULL
)
/

-- ADD KEYS FOR TABLE T_JOBADLANGUAGE

ALTER TABLE T_JOBADLANGUAGE ADD CONSTRAINT FK_JOBADLANGUAGE PRIMARY KEY (LANGUAGEID,JOBADID,COMPANYID,COUNTRYID)
/

-- TABLE T_SCRAPPEDADS

CREATE TABLE T_SCRAPPEDADS(
  SCRAPEID INTEGER GENERATED ALWAYS AS IDENTITY(
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOMINVALUE
    CACHE 20),
  SCRAPESESSIONID INTEGER,
  JOBADJSON VARCHAR2(32767 ),
  JSONTYPEID INTEGER,
  PARSED VARCHAR2(1 ),
  INSERTTIME TIMESTAMP(6) DEFAULT ON NULL SYSTIMESTAMP,
  PARSETIME TIMESTAMP(6),
  PARSELOG VARCHAR2(32767 )
)
/

-- TABLE AND COLUMNS COMMENTS SECTION

COMMENT ON COLUMN T_SCRAPPEDADS.JOBADJSON IS 'THE JSON SCRAPPED FROM THE WEBSITE'
/
COMMENT ON COLUMN T_SCRAPPEDADS.JSONTYPEID IS '1 -- IS EJOBS SCRAPE'
/
COMMENT ON COLUMN T_SCRAPPEDADS.PARSED IS 'Y -- THE JSON HAS BEEN PARSED AND THE JOBAD HAS BEEN INSERTED
N -- THE JSJON HAS NOT YEET BEEN PARSED'
/
COMMENT ON COLUMN T_SCRAPPEDADS.INSERTTIME IS 'JSON RECEIVE TIMESTAMP'
/

-- TABLE T_ERRORJOBAD

CREATE TABLE T_ERRORJOBAD(
  JODID NUMBER,
  JOBNAME VARCHAR2(50 ),
  STARTTIME DATE,
  ENDTIME DATE,
  DURATION NUMBER,
  MESSAGE VARCHAR2(4000 )
)
/

-- TABLE T_USERS

CREATE TABLE T_USERS(
  ID INTEGER GENERATED ALWAYS AS IDENTITY(
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOMINVALUE
    CACHE 20) NOT NULL,
  NAME VARCHAR2(200 ),
  EMAIL VARCHAR2(300 ),
  OPENID VARCHAR2(200 )
)
/

-- ADD KEYS FOR TABLE T_USERS

ALTER TABLE T_USERS ADD CONSTRAINT KEY3 PRIMARY KEY (ID)
/

-- TABLE T_STEGGEDADS

CREATE TABLE T_STEGGEDADS(
)
/

-- CREATE VIEWS SECTION -------------------------------------------------

CREATE VIEW C##AZYL.V_JOBADS_PER_WEEKNR("ID","WEEKNR","YEAR","NROFNEWJOBADS") AS
SELECT DISTINCT ROWNUM AS ID,TO_CHAR(JOBADSTARTDATE, 'IW') AS WEEKNR, TO_CHAR(JOBADSTARTDATE, 'YYYY') AS YEAR,  COUNT(*) OVER (PARTITION BY TO_CHAR(JOBADSTARTDATE, 'IW')) AS NROFNEWJOBADS
FROM T_JOBAD
/

CREATE VIEW C##AZYL.V_JOBADS_PER_WEEKNR_V2("ID","WEEKNR","YEAR","NROFNEWJOBADS") AS
SELECT ROWNUM AS ID, T."WEEKNR",T."YEAR",T."NROFNEWJOBADS" FROM (
SELECT DISTINCT
                TO_CHAR(JOBADSTARTDATE, 'IW') AS WEEKNR,
                TO_CHAR(JOBADSTARTDATE, 'YYYY') AS YEAR,
                COUNT(*) OVER(PARTITION BY TO_CHAR(JOBADSTARTDATE, 'IW')) AS NROFNEWJOBADS
  FROM T_JOBAD ORDER BY YEAR DESC,WEEKNR DESC) T
  WHERE WEEKNR IS NOT NULL
/

CREATE VIEW C##AZYL.V_TOP10_BY_JOBADS("ID","COMPANYNAME","JOBADNR") AS
SELECT ROWNUM AS ID, T."COMPANYNAME",T."JOBADNR" FROM (

SELECT DISTINCT C.COMPANYNAME, COUNT(*) OVER(PARTITION BY C.COMPANYNAME) AS JOBADNR
  FROM T_JOBAD J, T_COMPANY C
 WHERE J.COMPANYID = C.COMPANYID
 ORDER BY JOBADNR DESC) T
 WHERE ROWNUM<11
/

CREATE VIEW C##AZYL.V_CURENT_WEEK_JOB_POS_CC("ID","COMPANYNAME","SOURCE","DEPARTMENTNAME","JOBTITLE","JOBADPOSITIONSNR","JOBADAPPLICANTSNR") AS
SELECT ROWNUM AS ID, T."UPPER(C.COMPANYNAME)" AS COMPANYNAME ,'EJOBS' AS SOURCE,T."DEPARTMENTNAME",T."JOBTITLE",T."JOBADPOSITIONSNR",T."JOBADAPPLICANTSNR" FROM

 (SELECT UPPER(C.COMPANYNAME), D.DEPARTMENTNAME, J.JOBTITLE, J.JOBADPOSITIONSNR, J.JOBADAPPLICANTSNR
  FROM T_JOBAD J, T_COMPANY C, T_ACTIVEJOBADSDEPARTMENTS DA, T_DEPARTMENTS D
 WHERE J.COMPANYID = C.COMPANYID
   AND DA.JOBADID = J.JOBADID
   AND DA.DEPARTMENTID = D.DEPARTMENTID

   AND JOBADSTARTDATE >= NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '14' DAY, 'SUN')
   AND JOBADSTARTDATE < NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '7' DAY, 'SUN')
   AND JOBADENDDATE >= SYSDATE

   AND D.DEPARTMENTNAME = 'CLIENT SERVICE / CALL CENTER'
   AND C.COMPANYID NOT IN (2889, 3314, 1681)

  -- AND LOWER(C.COMPANYNAME) LIKE '%ARV%'

 ORDER BY J.JOBADPOSITIONSNR DESC, C.COMPANYID) T
/

CREATE VIEW C##AZYL.V_POSITIONS_PERC_D("ID","COMPANYNAME","DEPARTMENTNAME","POSITIONSTOTAL","POSITIONSDEPARTMENT") AS
SELECT ROWNUM AS ID, T."COMPANYNAME",T."DEPARTMENTNAME",T."POSITIONSTOTAL",T."POSITIONSDEPARTMENT" FROM (

WITH JOBADS AS
 (SELECT J.JOBADID, UPPER(C.COMPANYNAME) AS COMPANYNAME, D.DEPARTMENTNAME, J.JOBTITLE, J.JOBADPOSITIONSNR, J.JOBADAPPLICANTSNR
    FROM T_JOBAD J, T_COMPANY C, T_ACTIVEJOBADSDEPARTMENTS DA, T_DEPARTMENTS D
   WHERE J.COMPANYID = C.COMPANYID
     AND DA.JOBADID = J.JOBADID
     AND DA.DEPARTMENTID = D.DEPARTMENTID

     AND JOBADSTARTDATE >= NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '14' DAY, 'SUN')
     AND JOBADSTARTDATE < NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '7' DAY, 'SUN')
     AND JOBADENDDATE >= SYSDATE

     AND C.COMPANYID NOT IN (2889, 3314, 1681)
   ORDER BY J.JOBADPOSITIONSNR DESC, C.COMPANYID, D.DEPARTMENTID)

SELECT COMPANYNAME, DEPARTMENTNAME,SUM(JOBADPOSITIONSNR) OVER(PARTITION BY JOBADID, COMPANYNAME) AS POSITIONSTOTAL ,SUM(JOBADPOSITIONSNR) OVER(PARTITION BY JOBADID, COMPANYNAME, DEPARTMENTNAME) AS POSITIONSDEPARTMENT
  FROM JOBADS

 ORDER BY POSITIONSTOTAL DESC, COMPANYNAME) T
/

CREATE VIEW C##AZYL.V_SCRAPE_DETAILS("ID","OLDEST_JOBAD","NEWEST_JOBAD","JOBADS_NR","LAST_JOBADS_SCRAPE_DATE") AS
WITH JOBAD_DETAILS AS

 (SELECT MIN(J.JOBADSTARTDATE) OLDEST_JOBAD, MAX(J.JOBADSTARTDATE) NEWEST_JOBAD, COUNT(*) JOBADS_NR
    FROM T_JOBAD J
   WHERE J.JOBADENDDATE >= SYSDATE),
LASTSCRAPEDATE AS
 (SELECT MAX(E.ENDTIME) AS LAST_JOBADS_SCRAPE_DATE
    FROM T_ERRORJOBAD E
   WHERE E.MESSAGE LIKE '%JOB SUCCESFULLY!%'
     AND E.MESSAGE NOT LIKE '%ERROR%')

SELECT ROWNUM AS ID,J."OLDEST_JOBAD",J."NEWEST_JOBAD",J."JOBADS_NR",L."LAST_JOBADS_SCRAPE_DATE" FROM JOBAD_DETAILS J, LASTSCRAPEDATE L
/

CREATE VIEW C##AZYL.V_CURENT_WEEK_JOB_POS_CC_GB("ID","UPPER(C.COMPANYNAME)","DEPARTMENTNAME","LANGUAGENAME","JOBTITLE","JOBADPOSITIONSNR","JOBADAPPLICANTSNR") AS
SELECT ROWNUM AS ID, T."UPPER(C.COMPANYNAME)",T."DEPARTMENTNAME",T."LANGUAGENAME",T."JOBTITLE",T."JOBADPOSITIONSNR",T."JOBADAPPLICANTSNR" FROM

(
 SELECT UPPER(C.COMPANYNAME), D.DEPARTMENTNAME,L.LANGUAGENAME ,J.JOBTITLE, J.JOBADPOSITIONSNR, J.JOBADAPPLICANTSNR
  FROM T_JOBAD J, T_COMPANY C, T_ACTIVEJOBADSDEPARTMENTS DA, T_DEPARTMENTS D , T_JOBADLANGUAGE JL, T_LANGUAGE L
 WHERE J.COMPANYID = C.COMPANYID
   AND DA.JOBADID = J.JOBADID
   AND DA.DEPARTMENTID = D.DEPARTMENTID
   AND J.JOBADID = JL.JOBADID
   AND JL.LANGUAGEID = L.LANGUAGEID

   AND JOBADSTARTDATE >= NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '14' DAY, 'SUN')
   AND JOBADSTARTDATE < NEXT_DAY(TRUNC(SYSDATE) - INTERVAL '7' DAY, 'SUN')
   AND JOBADENDDATE >= SYSDATE

   AND D.DEPARTMENTNAME = 'CLIENT SERVICE / CALL CENTER'
   AND C.COMPANYID NOT IN (2889, 3314, 1681)
   AND JL.LANGUAGEID=8 --GERMAN

  -- AND LOWER(C.COMPANYNAME) LIKE '%ARV%'

 ORDER BY J.JOBADPOSITIONSNR DESC, C.COMPANYID

) T
/

-- CREATE MATERIALIZED VIEWS SECTION -------------------------------------------------

CREATE MATERIALIZED VIEW MATERIALIZEDVIEW1
AS /*SELECT_STATEMENT*/
/

-- CREATE RELATIONSHIPS SECTION ------------------------------------------------- 

ALTER TABLE T_ACTIVEJOBADSDEPARTMENTS ADD CONSTRAINT JOBAD_TO_DEPARTMENTS FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBAD ADD CONSTRAINT JOBAD_TO_COMPANY FOREIGN KEY (COMPANYID, COUNTRYID) REFERENCES T_COMPANY (COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBADINDUSTRY ADD CONSTRAINT INDUSTRY_TO_JOBADS FOREIGN KEY (INDUSTRYID) REFERENCES T_INDUSTRY (INDUSTRYID)
/

ALTER TABLE T_COUNTY ADD CONSTRAINT COUNTIES_TO_COUNTRY FOREIGN KEY (COUNTRYID) REFERENCES T_COUNTRY (COUNTRYID)
/

ALTER TABLE T_CITY ADD CONSTRAINT CITIES_TO_COUNTIES FOREIGN KEY (COUNTYID, COUNTRYID) REFERENCES T_COUNTY (COUNTYID, COUNTRYID)
/

ALTER TABLE T_COMPANY ADD CONSTRAINT COUNTRY_TO_COMPANIES FOREIGN KEY (COUNTRYID) REFERENCES T_COUNTRY (COUNTRYID)
/

ALTER TABLE T_JOBADINDUSTRY ADD CONSTRAINT JOBAD_TO_INDUSTRYIES FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_ACTIVEJOBADSDEPARTMENTS ADD CONSTRAINT DEPARTMENT_TO_JOBADS FOREIGN KEY (DEPARTMENTID) REFERENCES T_DEPARTMENTS (DEPARTMENTID)
/

ALTER TABLE T_JOBADCAREERLEVEL ADD CONSTRAINT CAREERLEVEL_TO_JOBADS FOREIGN KEY (CAREERLEVELID) REFERENCES T_CAREERLEVEL (CAREERLEVELID)
/

ALTER TABLE T_JOBADCAREERLEVEL ADD CONSTRAINT JOBAD_TO_CARRERLEVELS FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBADDRIVERLICENCE ADD CONSTRAINT JOBAD_TO_DRIVERLICENCESSES FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBADDRIVERLICENCE ADD CONSTRAINT DRIVERLICENCE_TO_JOBADS FOREIGN KEY (DRIVERLICENCEID) REFERENCES T_DRIVERLICENCE (DRIVERLICENCEID)
/

ALTER TABLE T_JOBADCITY ADD CONSTRAINT JOBADS_TO_CITY FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBADCITY ADD CONSTRAINT CITIES_TO_JOBAD FOREIGN KEY (CITYID, COUNTYID, COUNTRYID) REFERENCES T_CITY (CITYID, COUNTYID, COUNTRYID)
/

ALTER TABLE T_JOBADJOBTYPE ADD CONSTRAINT JOBTYPE_TO_JOBADS FOREIGN KEY (JOBADTYPEID) REFERENCES T_JOBTYPE (JOBADTYPEID)
/

ALTER TABLE T_JOBADJOBTYPE ADD CONSTRAINT JOBADS_TO_JOBTYPE FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

ALTER TABLE T_JOBADLANGUAGE ADD CONSTRAINT LANGUAGE_TO_JOBADS FOREIGN KEY (LANGUAGEID) REFERENCES T_LANGUAGE (LANGUAGEID)
/

ALTER TABLE T_JOBADLANGUAGE ADD CONSTRAINT JOBAD_TO_LANGUAGESSES FOREIGN KEY (JOBADID, COMPANYID, COUNTRYID) REFERENCES T_JOBAD (JOBADID, COMPANYID, COUNTRYID) ON DELETE CASCADE
/

-- CREATE ROLES SECTION -------------------------------------------------

CREATE ROLE CONNECT
/
CREATE ROLE RESOURCE
/
CREATE ROLE DBA
/
CREATE ROLE AUDIT_ADMIN
/
CREATE ROLE AUDIT_VIEWER
/
CREATE ROLE SELECT_CATALOG_ROLE
/
CREATE ROLE EXECUTE_CATALOG_ROLE
/
CREATE ROLE DELETE_CATALOG_ROLE
/
CREATE ROLE CAPTURE_ADMIN
/
CREATE ROLE EXP_FULL_DATABASE
/
CREATE ROLE IMP_FULL_DATABASE
/
CREATE ROLE CDB_DBA
/
CREATE ROLE PDB_DBA
/
CREATE ROLE RECOVERY_CATALOG_OWNER
/
CREATE ROLE LOGSTDBY_ADMINISTRATOR
/
CREATE ROLE DBFS_ROLE
/
CREATE ROLE GSMUSER_ROLE
/
CREATE ROLE AQ_ADMINISTRATOR_ROLE
/
CREATE ROLE AQ_USER_ROLE
/
CREATE ROLE DATAPUMP_EXP_FULL_DATABASE
/
CREATE ROLE DATAPUMP_IMP_FULL_DATABASE
/
CREATE ROLE ADM_PARALLEL_EXECUTE_TASK
/
CREATE ROLE PROVISIONER
/
CREATE ROLE XS_RESOURCE
/
CREATE ROLE XS_SESSION_ADMIN
/
CREATE ROLE XS_NAMESPACE_ADMIN
/
CREATE ROLE XS_CACHE_ADMIN
/
CREATE ROLE GATHER_SYSTEM_STATISTICS
/
CREATE ROLE OPTIMIZER_PROCESSING_RATE
/
CREATE ROLE GSMADMIN_ROLE
/
CREATE ROLE RECOVERY_CATALOG_USER
/
CREATE ROLE EM_EXPRESS_BASIC
/
CREATE ROLE EM_EXPRESS_ALL
/
CREATE ROLE SCHEDULER_ADMIN
/
CREATE ROLE HS_ADMIN_SELECT_ROLE
/
CREATE ROLE HS_ADMIN_EXECUTE_ROLE
/
CREATE ROLE HS_ADMIN_ROLE
/
CREATE ROLE GLOBAL_AQ_USER_ROLE
/
CREATE ROLE OEM_ADVISOR
/
CREATE ROLE OEM_MONITOR
/
CREATE ROLE XDBADMIN
/
CREATE ROLE XDB_SET_INVOKER
/
CREATE ROLE AUTHENTICATEDUSER
/
CREATE ROLE XDB_WEBSERVICES
/
CREATE ROLE XDB_WEBSERVICES_WITH_PUBLIC
/
CREATE ROLE XDB_WEBSERVICES_OVER_HTTP
/
CREATE ROLE GSM_POOLADMIN_ROLE
/
CREATE ROLE GDS_CATALOG_SELECT
/
CREATE ROLE WM_ADMIN_ROLE
/
CREATE ROLE JAVAUSERPRIV
/
CREATE ROLE JAVAIDPRIV
/
CREATE ROLE JAVASYSPRIV
/
CREATE ROLE JAVADEBUGPRIV
/
CREATE ROLE EJBCLIENT
/
CREATE ROLE JMXSERVER
/
CREATE ROLE JAVA_ADMIN
/
CREATE ROLE JAVA_DEPLOY
/
CREATE ROLE CTXAPP
/
CREATE ROLE ORDADMIN
/
CREATE ROLE OLAP_XS_ADMIN
/
CREATE ROLE OLAP_DBA
/
CREATE ROLE OLAP_USER
/
CREATE ROLE SPATIAL_WFS_ADMIN
/
CREATE ROLE WFS_USR_ROLE
/
CREATE ROLE SPATIAL_CSW_ADMIN
/
CREATE ROLE CSW_USR_ROLE
/
CREATE ROLE LBAC_DBA
/
CREATE ROLE APEX_ADMINISTRATOR_ROLE
/
CREATE ROLE APEX_GRANTS_FOR_NEW_USERS_ROLE
/
CREATE ROLE DV_SECANALYST
/
CREATE ROLE DV_MONITOR
/
CREATE ROLE DV_ADMIN
/
CREATE ROLE DV_OWNER
/
CREATE ROLE DV_ACCTMGR
/
CREATE ROLE DV_PUBLIC
/
CREATE ROLE DV_PATCH_ADMIN
/
CREATE ROLE DV_STREAMS_ADMIN
/
CREATE ROLE DV_GOLDENGATE_ADMIN
/
CREATE ROLE DV_XSTREAM_ADMIN
/
CREATE ROLE DV_GOLDENGATE_REDO_ACCESS
/
CREATE ROLE DV_AUDIT_CLEANUP
/
CREATE ROLE DV_DATAPUMP_NETWORK_LINK
/
CREATE ROLE DV_REALM_RESOURCE
/
CREATE ROLE DV_REALM_OWNER
/

-- GRANT PERMISSIONS SECTION -------------------------------------------------




